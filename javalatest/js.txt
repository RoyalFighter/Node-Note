/*console.log("helo World");
console.log("helo ");
console.log("help")
variable
name="helo"
food=30
console.log(food+"name")

operator
food=20
tip=0.2
tipAmount=food*tip
console.log(tipAmount)

'' ma only string not var
Promt
fruits=prompt('what is your fav food')
console.log(fruits)
food=prompt('how much was the food?')
tippercent=prompt('how much was the tip')/100
tipa=food*tippercent;
console.log(tipa)
food=Number(promt(how much was food))
INput is received as num not as string when boubnded by num
Dta type num string array object  boolean
operator +-/*% etc
Math method floor and ceil
Math.ceil(100.25)
Math.random()
//0 and 1
Math.random() *3
//0 and 3
Math.floor(Math.random() *3)





*/
 // weather app
/*let weather=prompt('how is the weaaather now??')
if(weather =='rain'){
  
  console.log('umbrella')
}
else{
  console.log('glasses')
}
*/
 /*functon no argument
function introduction(){
  console.log('Robin')
}
 introduction()
 with argument
function introduction(name){
  console.log(name)
}
introduction('hero')

template literal
function introduction(name){
  intro=`hi ${name} how are you `
  console.log(intro)
}
introduction('Robin')

function with multiple arg and return
function sum(a,b){
  return a+b;
}
num=sum(1,4)
console.log(num)
function sum(a,b){
  return a+b
}
function tamt(food,tip){
  tipp=tip/100
  tipa=food*tipp
  total=sum(tipa,food)
  return total
}
console.log(tamt(300,20))
Arrow function 
implicit return and for explict return remove {} and keyword return

const sum=(a,b)=>{
  return a+b
}
console.log(sum(20,40))
const sum=(a,b)=>a+b

console.log(sum(20,40))
//aray

const num=[1,2,3,4,5]
console.log(num)
 console.log(num[3])
num.push(7)
console.log(num)
console.log(num.slice(0,3))
//Lenght and index of
console.log(num.indexOf(2))
console.log(num.length)

//Object
const person={
   name:'robin',
   age:20
}
console.log(person.name)
// Bracket notation
console.log(person['name'])
// Update in object
person.phone='3737436'
// or person['phone']='113434'
console.log(person.phone)
 imp function


const introduction=(name,shirt) =>{
  const person={
    name:name,
    shirt:shirt
  }
const intro=`helo ${person.name} color of your shirt is ${person.shirt}`
  return intro
}
console.log(introduction('Robin','White'))


//method function bhitra obj
const introduction=(name,age)=>{
const person={
   name:name,
   age:age,
  earning:500000,
  loan:30000,
  saving:function(){
    // this rep person
    return this.earning-this.loan
    
  }
  
}
  const intro=`hi ${person.name} you are ${person.age} old and your saving is ${person.saving()}`
  return intro
}
console.log(introduction('robin',20))


//loop
const nums=[1,2,3,4,5,6,7]
for(i=0;i<num.length;i++){
  // console.log(nums[i])
}
//or
for (const num of nums){
  console.log(num)
//*2 
console.log(num*2)
}
//multiply nums and put it on new array
const nums=[1,2,3,4,5,6,7]
const result=[]
for(const num of nums){
  result.push(num*2)
}
console.log(result)
Doing same thing using function
const double=(nums)=>{
  const result=[]
  for (const num of nums){
    
    result.push(num*2)
  }
  return result
  
}

console.log(double([1,2,3,45,5]))
*/
console.log(double([1, 2, 3, 4, 5, 6]))

// [2, 4, 6, 8, 10, 12]

// const howManyLetters = (phrase) => {
//   // counter
//   let result = 0;

//   for (const index in phrase) {
//     console.log(Number(index) + 1)
//     result = Number(index) + 1
//   }

//   return { result }
// }

// const phrase = prompt('write your phrase')

// console.log(howManyLetters(phrase))

// [1, 2, 3, 4] // 10
// result = 0
// result = 1
// result = 3
// result = 6
// result = 10

// const sumArray = (numbers) => {
//   let result = 0;
//   // for loop
//   for (const number of numbers) {
//     console.log(number)
//     result += number
//   }
//   return { result }
// }

// const nums = [1, 2, 3, 4, 5]
// console.log(sumArray(nums))
// sum up all numbers in array

// const max = (numbers) => {
//   let result = numbers[0]

//   // loop
//   for (const number of numbers) {
//     if (number > result) {
//       result = number
//     }
  }

   return { result }
 }


/*function that finds number of letter in phrase
//in obj we cannot repet key 
  //for first h set h to0 thenaginthen 1 and so on same for a */
const lcount = (phrase)=>{
  // if haha output h:2 a:2
console.log(phrase)
   let frequency={}
for(const letter of phrase)
{
  // console.log(letter)
  //make freq obj{}
 
  //check if it exist in obj
  if(letter in frequency )
    //if yes inc value by 1 else put 1
  {
    frequency[letter]+=1
  }else{
    frequency[letter]=1
  }
  
}
return frequency
}
console.log(lcount('haha'))


//word freq when for of loop is ru it returns letter but here we want words we can convert word into array by method split
const wordFreq=(phrase)=>{
  let freq={}
  //conveting phrase to array sperated by space
  words=phrase.split(' ')
    console.log(words)
  for( const word of words){
  console.log(word)
    if(word in freq){
      freq[word]+=1
    }else{
      freq[word]=1
    }
    
  }
  return freq
}
console.log(wordFreq('lol iam lol iam'))
//or

// const letterFrequency = (phrase) => {
//   // letterFrequency('haha') ðŸ‘‰ {'h': 2, 'a': 2}
//   console.log(phrase)
//   // make a `frequency` object {}
//   let frequency = {}
//   for (const letter of phrase) {
//     // check if letter exists in frequency
//     if (letter in frequency) {
//       // increment the value by +1
//       frequency[letter] += 1
//       // otherwise, set the value to 1
//     } else {
//       frequency[letter] = 1
//     }
//   }
//   return frequency
// }

// console.log(letterFrequency('lol, what are you doing later tonight lol, haha!'))

// wordFrequency('lol what lol') ðŸ‘‰ {'lol': 2, 'what': 1}
// const wordFrequency = (phrase) => {
//   const words = phrase.split(' ')
//   return letterFrequency(words)
// }
 higher order function map filter reduce

//map
// [1,2,3,4].map(number=>console.log(number))
// let result=[1,2,3,4].map(number=>console.log(number*8))
// console.log(result)
//maps loops and return the array
//map iteself is arrow function
// map in function
const double=(num)=>{
  return num.map(num=>num*4)
}
console.log([1,12,3,65])



//filter from arry ie form num array ii want number greater than 5
//filter also loops and returns array 
// for manual
// for filter we create empty array and push alll the num greater thn 5 in tha  arry initaily fist num in arry is grater and is compared with rest of num in array
 //Manual way
// const filter=(nums,greater)=>{
//    let result=[]
//    for (const num of nums){
//    if (num>greater){
//      result.push(num)
//    }
//    }
//    return result
//  }
// console.log(filter([1,2,3,4,5,6,7],3))
//using filter
// const num=[1,3,4,6,7,90]
// console.log(num.filter(num=>num>3))
//array with obj
const actor=[
  {name:'jony',netw:10000},
  {name:'jon',netw:1780000},
  {name:'jonh cena',netw:190000},
]
console.log(actor.filter(actor => actor.netw > 100))
playground.innerHtml=<h1>helo</h1>
//splice turn it into array join turns arry to string

//another eg for filter and map here we filter the actor having certain net eorth then map though each actor to get their name 
//and  converted arry got from map to string using join
const actor=[
  {name:'jony',netw:10000},
  {name:'jon',netw:1780000},
  {name:'jonh cena',netw:190000},
]
let result = actor.filter(actor => actor.netw > 100)
console.log(result)
let names=result.map(actor=>actor.name).join(', ')
playground.innerHtml=`<h1>${names}</h1>`